{"version":3,"sources":["./src/app/modals/task-fulfillment/task-fulfillment.page.html","./src/app/modals/task-fulfillment/task-fulfillment.page.scss","./src/app/modals/task-fulfillment/task-fulfillment.page.ts"],"names":[],"mappings":"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","file":"default~animal-worklist-animal-worklist-module~modals-task-fulfillment-task-fulfillment-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModalInProgress()\\\">\\n         Close\\n      </ion-button>\\n    </ion-buttons>\\n\\n     <ion-buttons class=\\\"button_style\\\" slot=\\\"end\\\">\\n      <ion-button (click)=\\\"switchStyle()\\\">\\n        {{ tablestyle }}\\n      </ion-button>\\n    </ion-buttons>\\n\\n    <ion-title>\\n      Necropsy Task Fulfillment\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"NecropsyTaskFulfillment-Header\\\">\\n      <h1> <b>Path Request #:</b> {{pathrequestid}} <b>&nbsp;Group/Animal:</b> {{animalid}} <b>&nbsp;Species:</b> {{species}} </h1>\\n      <h1> <b>Strain:</b> {{strain}} </h1>\\n      <h1> <b>Necropsy Work Date:</b> {{date}} <b>&nbsp;Technician:</b> {{technician}} </h1>\\n      <h1> <b>Enter Gross Observations</b> </h1>\\n  </div>\\n\\n  <ngx-datatable  class=\\\"necropsytask_table\\\"\\n    [ngClass]=\\\"tablestyle\\\" \\n    [rows]=\\\"items\\\"\\n    [columnMode]=\\\"'force'\\\" \\n    [headerHeight]=\\\"60\\\" \\n    [rowHeight]=\\\"'75'\\\">\\n    \\n    <ngx-datatable-column name=\\\"tissue\\\"></ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Weight\\\" [cellClass]=\\\"getWeighCellClass\\\" sortable=\\\"false\\\" prop=\\\"name\\\">\\n      <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n        <ion-input [(ngModel)]=\\\"row.weight\\\" placeholder=\\\"Enter Weight\\\"></ion-input>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    \\n    <ngx-datatable-column name=\\\"Photo\\\" [cellClass]=\\\"getPhotoCellClass\\\" sortable=\\\"false\\\" prop=\\\"name\\\">\\n      <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n        <ion-button size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"takePicture()\\\">{{picturetext}}</ion-button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Locations\\\" sortable=\\\"false\\\" prop=\\\"name\\\">\\n     <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n      <ion-select [(ngModel)]=\\\"row.location\\\" placeholder=\\\"Locations\\\">\\n        <ion-select-option value=\\\"abdonimal cavity\\\">Abdonimal Cavity</ion-select-option>\\n        <ion-select-option value=\\\"anterior\\\">Anterior</ion-select-option>\\n        <ion-select-option value=\\\"area\\\">Area</ion-select-option>\\n        <ion-select-option value=\\\"bilateral\\\">Bilateral</ion-select-option>\\n        <ion-select-option value=\\\"both\\\">Both</ion-select-option>\\n        <ion-select-option value=\\\"cranial\\\">Cranial</ion-select-option>\\n        <ion-select-option value=\\\"caudal\\\">Caudal</ion-select-option>\\n        <ion-select-option value=\\\"dorsal\\\">Dorsal</ion-select-option>\\n        <ion-select-option value=\\\"exterior\\\">Exterior</ion-select-option>\\n        <ion-select-option value=\\\"glandular\\\">Glandular</ion-select-option>\\n        <ion-select-option value=\\\"interior\\\">Interior</ion-select-option>\\n        <ion-select-option value=\\\"l\\\">L</ion-select-option>\\n        <ion-select-option value=\\\"margins\\\">Margins</ion-select-option>\\n        <ion-select-option value=\\\"non glandular\\\">Non-glandular</ion-select-option>\\n        <ion-select-option value=\\\"not present\\\">Not Present</ion-select-option>\\n        <ion-select-option value=\\\"palmar\\\">Palmar</ion-select-option>\\n        <ion-select-option value=\\\"plantar\\\">Plantar</ion-select-option>\\n        <ion-select-option value=\\\"posterior\\\">Posterior</ion-select-option>\\n        <ion-select-option value=\\\"r\\\">R</ion-select-option>\\n        <ion-select-option value=\\\"thoracic cavity\\\">Thoracic Cavity</ion-select-option>\\n        <ion-select-option value=\\\"unilateral\\\">Unilateral</ion-select-option>\\n        <ion-select-option value=\\\"ventral\\\">Ventral</ion-select-option>\\n        <ion-select-option value=\\\"apical lobe\\\">Apical Lobe</ion-select-option>\\n        <ion-select-option value=\\\"azygous lobe\\\">Azygous Lobe</ion-select-option>\\n        <ion-select-option value=\\\"cardiac lobe\\\">Cardiac Lobe</ion-select-option>\\n        <ion-select-option value=\\\"diaphramatic lobe\\\">Diaphramatic Lobe</ion-select-option>\\n        <ion-select-option value=\\\"left lobe\\\">Left Lobe</ion-select-option>\\n        <ion-select-option value=\\\"median lobe\\\">Median Lobe</ion-select-option>\\n        <ion-select-option value=\\\"right lobe\\\">Right Lobe</ion-select-option>\\n        <ion-select-option value=\\\"caudate lobe\\\">Caudate Lobe</ion-select-option>\\n      </ion-select>\\n     </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Color\\\" sortable=\\\"false\\\" prop=\\\"name\\\">\\n      <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n        <ion-select [(ngModel)]=\\\"row.color\\\" placeholder=\\\"Color\\\">\\n          <ion-select-option value=\\\"black\\\">Black</ion-select-option>\\n          <ion-select-option value=\\\"brown\\\">Brown</ion-select-option>\\n          <ion-select-option value=\\\"clear\\\">Clear</ion-select-option>\\n          <ion-select-option value=\\\"dark red\\\">Dark Red</ion-select-option>\\n          <ion-select-option value=\\\"green\\\">Green</ion-select-option>\\n          <ion-select-option value=\\\"mottled\\\">Mottled</ion-select-option>\\n          <ion-select-option value=\\\"pale\\\">Pale</ion-select-option>\\n          <ion-select-option value=\\\"pink\\\">Pink</ion-select-option>\\n          <ion-select-option value=\\\"red\\\">Red</ion-select-option>\\n          <ion-select-option value=\\\"tan\\\">Tan</ion-select-option>\\n          <ion-select-option value=\\\"yellow\\\">Yellow</ion-select-option>\\n          <ion-select-option value=\\\"white\\\">White</ion-select-option>\\n        </ion-select>\\n       </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Size\\\">\\n      <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n        <ion-select [(ngModel)]=\\\"row.size\\\" placeholder=\\\"Size\\\">\\n          <ion-select-option value=\\\"enlarged\\\">Enlarged</ion-select-option>\\n          <ion-select-option value=\\\"slightly enlarged\\\">Slightly Enlarged</ion-select-option>\\n          <ion-select-option value=\\\"extremely enlarged\\\">Extremely Enlarged</ion-select-option>\\n          <ion-select-option value=\\\"extremely small\\\">Extremely Small</ion-select-option>\\n          <ion-select-option value=\\\"multifocal\\\">Multifocal</ion-select-option>\\n          <ion-select-option value=\\\"pinpoint\\\">Pinpoint</ion-select-option>\\n          <ion-select-option value=\\\"small\\\">Small</ion-select-option>\\n          <ion-select-option value=\\\"undistinguishable\\\">Undistinguishable</ion-select-option>\\n          <ion-select-option value=\\\"various\\\">Various</ion-select-option>\\n        </ion-select>\\n       </ng-template>\\n    </ngx-datatable-column>\\n   \\n    <ngx-datatable-column name=\\\"Gross Observations\\\" sortable=\\\"false\\\" prop=\\\"name\\\">\\n      <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n        <ion-select [(ngModel)]=\\\"row.observations\\\" placeholder=\\\"Observations\\\">\\n          <ion-select-option value=\\\"adhered\\\">Adhered</ion-select-option>\\n          <ion-select-option value=\\\"air filled\\\">Air Filled</ion-select-option>\\n          <ion-select-option value=\\\"atrophied\\\">Atrophied</ion-select-option>\\n          <ion-select-option value=\\\"bedding\\\">Bedding</ion-select-option>\\n          <ion-select-option value=\\\"cut\\\">Cut</ion-select-option>\\n          <ion-select-option value=\\\"cystic\\\">Cystic</ion-select-option>\\n          <ion-select-option value=\\\"damaged\\\">Damaged</ion-select-option>\\n          <ion-select-option value=\\\"dilated pelvis\\\">Dilated Pelvis</ion-select-option>\\n          <ion-select-option value=\\\"dry\\\">Dry</ion-select-option>\\n          <ion-select-option value=\\\"edematous\\\">Edematous</ion-select-option>\\n          <ion-select-option value=\\\"empty\\\">Empty</ion-select-option>\\n          <ion-select-option value=\\\"fatty\\\">Fatty</ion-select-option>\\n          <ion-select-option value=\\\"fluid filled\\\">Fluid Filled</ion-select-option>\\n          <ion-select-option value=\\\"gelatinous\\\">Gelatinous</ion-select-option>\\n          <ion-select-option value=\\\"granular\\\">Granular</ion-select-option>\\n          <ion-select-option value=\\\"hard\\\">Hard</ion-select-option>\\n          <ion-select-option value=\\\"hard/dry\\\">Hard/Dry</ion-select-option>\\n          <ion-select-option value=\\\"hydrocephalus\\\">Hydrocephalus</ion-select-option>\\n          <ion-select-option value=\\\"inflamed\\\">Inflamed</ion-select-option>\\n          <ion-select-option value=\\\"lost\\\">Lost</ion-select-option>\\n          <ion-select-option value=\\\"malocclusion\\\">Malocclusion</ion-select-option>\\n          <ion-select-option value=\\\"mass\\\">Mass</ion-select-option>\\n          <ion-select-option value=\\\"milk\\\">Milk</ion-select-option>\\n          <ion-select-option value=\\\"missing\\\">Missing</ion-select-option>\\n          <ion-select-option value=\\\"moribund\\\">Moribund</ion-select-option>\\n          <ion-select-option value=\\\"mucosa\\\">Mucosa</ion-select-option>\\n          <ion-select-option value=\\\"not inflated\\\">Not Inflated</ion-select-option>\\n          <ion-select-option value=\\\"not present\\\">Not Present</ion-select-option>\\n          <ion-select-option value=\\\"overly distented\\\">Overly Distented</ion-select-option>\\n          <ion-select-option value=\\\"prolapsed\\\">Prolapsed</ion-select-option>\\n          <ion-select-option value=\\\"scabby\\\">Scabby</ion-select-option>\\n          <ion-select-option value=\\\"scruffy\\\">Scruffy</ion-select-option>\\n          <ion-select-option value=\\\"serosa\\\">Serosa</ion-select-option>\\n          <ion-select-option value=\\\"slightly distented\\\">Slightly Distented</ion-select-option>\\n          <ion-select-option value=\\\"slightly granular\\\">Slightly Granular</ion-select-option>\\n          <ion-select-option value=\\\"striations\\\">Striations</ion-select-option>\\n          <ion-select-option value=\\\"test material\\\">Test Material</ion-select-option>\\n          <ion-select-option value=\\\"thickened\\\">Thickened</ion-select-option>\\n          <ion-select-option value=\\\"thin\\\">Thin</ion-select-option>\\n          <ion-select-option value=\\\"ulcerated\\\">Ulcerated</ion-select-option>\\n          <ion-select-option value=\\\"undistinguishable\\\">Undistinguishable</ion-select-option>\\n          <ion-select-option value=\\\"watery\\\">Watery</ion-select-option>\\n        </ion-select>      \\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Gross Comments\\\" sortable=\\\"false\\\" prop=\\\"name\\\">\\n      <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n        <ion-input [(ngModel)]=\\\"row.grosscomments\\\" placeholder=\\\"Enter Gross Comment\\\"></ion-input>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n  </ngx-datatable>\\n\\n  <div class=\\\"NecropsyTaskFulfillment-Footer\\\">\\n    <ion-button class=\\\"submit_button\\\" size=\\\"small\\\" (click)=\\\"closeModal()\\\">No Gross Lesions</ion-button>\\n    <ion-button class=\\\"submit_button\\\" size=\\\"small\\\" (click)=\\\"closeModal()\\\">Submit Observations</ion-button>\\n  </div>\\n\\n</ion-content>\\n\"","module.exports = \".NecropsyTaskFulfillment-Header {\\n  position: relative;\\n  margin-left: 20px;\\n}\\n\\n.NecropsyTaskFulfillment-Footer {\\n  width: 1178px;\\n  margin-top: 5px;\\n  display: inline-block;\\n}\\n\\n.button_style {\\n  margin-right: 30px;\\n  height: 30px;\\n  width: 50px;\\n}\\n\\n.necropsytask_table {\\n  margin-left: 20px;\\n  margin-right: 20px;\\n  border-top: 2px solid #ddd;\\n  border-bottom: 2px solid #ddd;\\n  border-left: 2px solid #ddd;\\n  border-right: 2px solid #ddd;\\n}\\n\\n.nogrosslesions_button {\\n  float: right;\\n  height: 35px;\\n}\\n\\n.submit_button {\\n  float: right;\\n  height: 35px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmFuY29iMS9OZWNyb3BzeUFwcC9zcmMvYXBwL21vZGFscy90YXNrLWZ1bGZpbGxtZW50L3Rhc2stZnVsZmlsbG1lbnQucGFnZS5zY3NzIiwic3JjL2FwcC9tb2RhbHMvdGFzay1mdWxmaWxsbWVudC90YXNrLWZ1bGZpbGxtZW50LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGFBQUE7RUFDQSxlQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDSjs7QURFQTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQkFBQTtFQUNBLDZCQUFBO0VBQ0EsMkJBQUE7RUFDQSw0QkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7RUFDQSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2RhbHMvdGFzay1mdWxmaWxsbWVudC90YXNrLWZ1bGZpbGxtZW50LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5OZWNyb3BzeVRhc2tGdWxmaWxsbWVudC1IZWFkZXJ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4uTmVjcm9wc3lUYXNrRnVsZmlsbG1lbnQtRm9vdGVye1xuICAgIHdpZHRoOiAxMTc4cHg7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmJ1dHRvbl9zdHlsZXtcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiAgNTBweDtcbn1cblxuLm5lY3JvcHN5dGFza190YWJsZXtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNkZGQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNkZGQ7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjZGRkO1xuICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkICNkZGQ7XG59XG5cbi5ub2dyb3NzbGVzaW9uc19idXR0b257XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGhlaWdodDogMzVweDtcbn1cblxuLnN1Ym1pdF9idXR0b257XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGhlaWdodDogMzVweDtcbn1cblxuIiwiLk5lY3JvcHN5VGFza0Z1bGZpbGxtZW50LUhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbi5OZWNyb3BzeVRhc2tGdWxmaWxsbWVudC1Gb290ZXIge1xuICB3aWR0aDogMTE3OHB4O1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmJ1dHRvbl9zdHlsZSB7XG4gIG1hcmdpbi1yaWdodDogMzBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICB3aWR0aDogNTBweDtcbn1cblxuLm5lY3JvcHN5dGFza190YWJsZSB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCAjZGRkO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2RkZDtcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjZGRkO1xuICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjZGRkO1xufVxuXG4ubm9ncm9zc2xlc2lvbnNfYnV0dG9uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBoZWlnaHQ6IDM1cHg7XG59XG5cbi5zdWJtaXRfYnV0dG9uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBoZWlnaHQ6IDM1cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Platform } from '@ionic/angular';\nimport { NavController } from '@ionic/angular';\nimport { NavigationExtras } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { columnsTotalWidth, RowHeightCache } from '@swimlane/ngx-datatable';\n\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nimport { File } from '@ionic-native/file/ngx';\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\n\nimport { map } from 'rxjs/operators';\n\n\nimport {Plugins, CameraResultType, Capacitor, CameraSource, CameraPhoto, FilesystemDirectory, FilesystemEncoding} from '@capacitor/core';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport { stringify } from 'querystring';\n\nimport { NavParams, ModalController } from '@ionic/angular';\n\nconst  {Camera, Filesystem} = Plugins;\n\n@Component({\n  selector: 'app-task-fulfillment',\n  templateUrl: './task-fulfillment.page.html',\n  styleUrls: ['./task-fulfillment.page.scss'],\n})\nexport class TaskFulfillmentPage implements OnInit {\n\n  row = {\n    tissue: '',\n    weight: '',\n    picturetext: '',\n    location: '',\n    color: '',\n    size: '',\n    observations: '',\n    grosscomments: ''\n  }\n\n  pdfObj = null;\n  pdfBase64: string;\n\n\n  photo: SafeResourceUrl;\n  \n  items: any[];\n  tablestyle = 'bootstrap';\n\n  tissue: string;\n  weight: string;\n  location: string;\n  color: string;\n  size: string;\n  observations: string;\n  grosscomments: string;\n  picturetext = \"Take Picture\";\n  updateText: string;\n\n  pathrequestid: string;\n  procedureid: string;\n  animalid: string;\n  requestdate: string;\n  date: string;\n  completion: string;\n  workliststatus: string;\n  technician: string;\n  species: string;\n  strain: string;\n\n  \n\n  constructor(private modalController: ModalController, private navParams: NavParams, private plt: Platform, private file: File, private fileOpener: FileOpener, private alertCtrl: AlertController, private sanitizer: DomSanitizer, private route: ActivatedRoute, private router: Router, public navCtrl: NavController, private http: HttpClient) { }\n\n  ngOnInit() {\n      this.pathrequestid = this.navParams.get(\"pathrequestid\");\n      this.procedureid = this.navParams.get(\"procedureid\");\n      this.requestdate = this.navParams.get(\"requestdate\");\n      this.date = this.navParams.get(\"date\");\n      this.technician = this.navParams.get(\"technician\");\n      this.animalid = this.navParams.get(\"animalid\");\n      this.species = this.navParams.get(\"species\");\n      this.strain = this.navParams.get(\"strain\");\n      this.requestdate = this.navParams.get(\"requestdate\");\n      this.loadData();\n  }\n  \n  loadData(){\n    let data:Observable<any>;\n    data =this.http.get('http://10.136.137.223:18080/ords/pathlimsreports/v_nec_int_tissue/?q=%7B%22path_request_id%22:%22'+this.pathrequestid+'%22,%22procedure_id%22:'+this.procedureid+'%7D')\n    .pipe(map((response: any) => response.items )) // map to use the items key!\n    data.subscribe(data => {\n      this.items = data;\n      this.items = this.items.map(item => {\n        if (!item.weight || item.weight == undefined) {\n            item.weight = '';\n        }\n        if (!item.location || item.location == undefined) {\n          item.location = '';\n        }\n        if (!item.color || item.color == undefined) {\n          item.color = '';\n        }\n        if (!item.size || item.size == undefined) {\n          item.size = '';\n        }\n        if (!item.picturetext || item.picturetext == undefined) {\n          item.picturetext = 'Take Picture';\n        }\n        if (!item.observations || item.observations == undefined) {\n          item.observations = '';\n        }\n        if (!item.grosscomments || item.grosscomments == undefined) {\n          item.grosscomments = '';\n        }\n        return item;\n      });\n    });\n  }\n\n  switchStyle() {\n    if (this.tablestyle == 'dark') {\n      this.tablestyle = 'bootstrap';\n    } else {\n      this.tablestyle = 'dark';\n    }\n  }\n\n  getWeighCellClass({row}) {\n    const isTrue = row.weigh_flg == 'Y';\n    return {\n      'true-row': isTrue,\n      'false-row': !isTrue\n    }\n  }\n\n  getPhotoCellClass({row}) {\n    const isTrue = row.photo_flg == 'Y';\n    return {\n      'true-row': isTrue,\n      'false-row': !isTrue\n    }\n  }\n  \n\n  async takePicture(row) {\n    const image = await Camera.getPhoto({\n          quality: 100,\n          allowEditing: true,\n          resultType: CameraResultType.Uri,\n          source: CameraSource.Camera,\n          saveToGallery: true,\n          promptLabelHeader: ''\n    });\n          row.picturetext = \"Picture Taken\";\n          this.photo = this.sanitizer.bypassSecurityTrustResourceUrl(image.dataUrl);\n  }\n\n  createPdf() {\n    let rows = [];\n    rows.push(['Tissue', 'Weight', 'Photo', 'Location', 'Color', 'Size', 'Gross Observations', 'Gross Comments']);\n    for (let i = 0; i < this.items.length; i++) {\n      const row = this.items[i];\n      rows.push([\n        row.tissue,\n        row.weight,\n        row.picturetext, \n        row.location,\n        row.color,\n        row.size,\n        row.observations,\n        row.grosscomments\n      ])\n    }\n\n    var docDefinition = {\n      content: [\n        { text: 'Necropsy Task Fulfillment', style: 'header' },\n        { text: 'Path Request #: ' + this.pathrequestid, alignment: 'left' },\n        { text: 'Technician: ' + this.technician, alignment: 'left' },\n        { text: 'Group/Animal: ' + this.animalid, alignment: 'left' },\n        { text: new Date().toLocaleString(), alignment: 'right' },\n\n        { table: {\n            body: rows\n          }\n        },\n      ],\n      styles: {\n        header: {\n          fontSize: 18,\n          bold: true,\n        },\n        subheader: {\n          fontSize: 14,\n          bold: true,\n          margin: [0, 15, 0, 0]\n        },\n        story: {\n          italic: true,\n          alignment: 'center',\n          width: '50%',\n        }\n      }\n    }\n    this.pdfObj = pdfMake.createPdf(docDefinition);\n\n    if (this.plt.is('cordova')) {\n      this.pdfObj.getBase64((data) => {\n        this.pdfBase64 = data;\n        console.log(this.pdfBase64);\n      });\n    }\n    \n  }\n\n  downloadPdf() {\n    if (this.plt.is('cordova')) {\n      // Save the PDF to the device\n      const fileName = 'taskfulfillment.pdf';\n      try {\n        Filesystem.writeFile({\n          path: fileName,\n          data: this.pdfBase64,\n          directory: FilesystemDirectory.Documents\n          // encoding: FilesystemEncoding.UTF8\n        }).then((writeFileResult) => {\n          Filesystem.getUri({\n              directory: FilesystemDirectory.Documents,\n              path: fileName\n          }).then((getUriResult) => {\n              const path = getUriResult.uri;\n              this.fileOpener.open(path, 'application/pdf')\n              .then(() => console.log('File is opened'))\n              .catch(error => console.log('Error openening file', error));\n              this.closeModal()\n          }, (error) => {\n              console.log(error);\n          });\n        });\n      } catch (error) {\n        console.error('Unable to write file', error);\n      }\n    } else {\n    // On a browser simply use download\n      this.pdfObj.download();\n      this.closeModal()\n    }\n  }\n\n\n  async closeModalInProgress(){   \n    this.workliststatus = \"In-Progress\";\n    await this.modalController.dismiss({\n         workliststatus: this.workliststatus\n      });\n  }\n\n  async closeModal(){   \n    \n    let rows = [];\n    rows.push(['Tissue', 'Weight', 'Photo', 'Location', 'Color', 'Size', 'Gross Observations', 'Gross Comments']);\n    for (let i = 0; i < this.items.length; i++) {\n      const row = this.items[i];\n      rows.push([\n        row.tissue,\n        row.weight,\n        row.picturetext, \n        row.location,\n        row.color,\n        row.size,\n        row.observations,\n        row.grosscomments\n      ])\n    }\n\n    this.workliststatus = \"Completed\";\n    await this.modalController.dismiss({\n         workliststatus: this.workliststatus,\n         body: rows,\n         completion: new Date().toLocaleString()\n      });\n    }\n  \n}\n\n\n"],"sourceRoot":""}